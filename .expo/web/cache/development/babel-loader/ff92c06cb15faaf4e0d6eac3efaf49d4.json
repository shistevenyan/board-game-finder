{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\Coding Applications\\\\Projects\\\\Board\\\\app\\\\components\\\\Buttons.js\";\n\nimport React, { useEffect, useState } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Button } from 'react-native-elements';\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\n\nvar Buttons = function Buttons(_ref) {\n  var navigation = _ref.navigation,\n      options = _ref.options,\n      nextRoute = _ref.nextRoute,\n      currentPage = _ref.currentPage,\n      gameParams = _ref.gameParams;\n  var buttonOptions = options;\n  var route = nextRoute;\n  var gameState = gameParams;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      activeOption = _useState2[0],\n      setActiveOption = _useState2[1];\n\n  var updateActiveOption = function updateActiveOption(option) {\n    setActiveOption(option);\n    gameState[currentPage] = option;\n  };\n\n  return React.createElement(View, {\n    style: styles.ButtonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, buttonOptions.map(function (option, index) {\n    return React.createElement(TouchableOpacity, {\n      style: {\n        backgroundColor: activeOption === option ? \"#FF6767\" : 'white'\n      },\n      key: index,\n      onPress: function onPress() {\n        return updateActiveOption(option);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: {\n        width: 75,\n        height: 80,\n        paddingTop: 20,\n        marginRight: 20,\n        marginLeft: 20,\n        marginTop: 20,\n        borderWidth: 1,\n        textAlign: 'center',\n        alignContent: 'center',\n        borderColor: \"#FF6767\",\n        fontSize: 25,\n        color: activeOption === option ? 'white' : \"#FF6767\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 25\n      }\n    }, option));\n  }), React.createElement(View, {\n    style: styles.navRow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, activeOption ? React.createElement(Button, {\n    buttonStyle: styles.navButton,\n    titleStyle: styles.navTitle,\n    onPress: function onPress() {\n      return navigation.navigate(route, gameState);\n    },\n    icon: React.createElement(Icon, {\n      name: \"navigate-next\",\n      size: 25,\n      color: \"white\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 29\n      }\n    }),\n    iconRight: true,\n    title: \"Next\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }) : null, React.createElement(Button, {\n    buttonStyle: styles.navButton,\n    titleStyle: styles.navTitle,\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    icon: React.createElement(Icon, {\n      name: \"navigate-before\",\n      size: 25,\n      color: \"white\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }\n    }),\n    iconLeft: true,\n    title: \"Back\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  })));\n};\n\nexport default Buttons;\nvar styles = StyleSheet.create({\n  ButtonContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center'\n  },\n  navButton: {\n    backgroundColor: \"#FF6767\",\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginLeft: 55,\n    marginRight: 55,\n    borderRadius: 60,\n    width: 100,\n    height: 45\n  },\n  navTitle: {\n    fontFamily: \"Inter_400Regular\"\n  },\n  navRow: {\n    marginTop: 30,\n    flexDirection: 'row'\n  }\n});","map":{"version":3,"sources":["E:/Coding Applications/Projects/Board/app/components/Buttons.js"],"names":["React","useEffect","useState","Button","Icon","Buttons","navigation","options","nextRoute","currentPage","gameParams","buttonOptions","route","gameState","activeOption","setActiveOption","updateActiveOption","option","styles","ButtonContainer","map","index","backgroundColor","width","height","paddingTop","marginRight","marginLeft","marginTop","borderWidth","textAlign","alignContent","borderColor","fontSize","color","navRow","navButton","navTitle","navigate","goBack","StyleSheet","create","flexDirection","flexWrap","justifyContent","alignItems","borderRadius","fontFamily"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport { TouchableOpacity, StyleSheet, Text, View } from 'react-native';\r\nimport { Button } from 'react-native-elements';\r\nimport Icon from 'react-native-vector-icons/MaterialIcons';\r\n\r\nconst Buttons = ({ navigation, options, nextRoute, currentPage, gameParams}) => {\r\n    const buttonOptions = options;\r\n    const route = nextRoute;\r\n    let gameState = gameParams;\r\n    const [activeOption, setActiveOption] = useState()\r\n\r\n        const updateActiveOption = (option) => {\r\n            setActiveOption(option)\r\n            gameState[currentPage] = option;\r\n        }\r\n\r\n    return (\r\n        <View style={styles.ButtonContainer}>\r\n            {buttonOptions.map((option, index) => {\r\n                return (\r\n                    <TouchableOpacity\r\n                        style={{ backgroundColor: activeOption === option ? \"#FF6767\" : 'white'}}\r\n                    key={index}\r\n                    onPress={() => updateActiveOption(option)} >\r\n                        <Text\r\n                        style={{\r\n                            width: 75,\r\n                            height: 80,\r\n                            paddingTop: 20,\r\n                            marginRight: 20,\r\n                            marginLeft: 20,\r\n                            marginTop: 20,\r\n                            borderWidth: 1,\r\n                            textAlign: 'center',\r\n                            alignContent: 'center',\r\n                            borderColor: \"#FF6767\",\r\n                            fontSize: 25,\r\n                            color: activeOption === option ? 'white' : \"#FF6767\",\r\n                            \r\n                        }}>\r\n                            {option}\r\n                        </Text>\r\n                    </TouchableOpacity>\r\n                )\r\n            })}\r\n\r\n            <View style={styles.navRow }>\r\n                {activeOption ? \r\n                    <Button\r\n                        buttonStyle={styles.navButton}\r\n                        titleStyle={styles.navTitle}\r\n                        onPress={() => navigation.navigate(route, gameState)}\r\n                        icon={\r\n                            <Icon\r\n                                name=\"navigate-next\"\r\n                                size={25}\r\n                                color=\"white\"\r\n                            />\r\n                        }\r\n                        iconRight\r\n                        title=\"Next\"\r\n                    />\r\n                    :\r\n                    null }\r\n\r\n                    <Button\r\n                        buttonStyle={styles.navButton}\r\n                        titleStyle={styles.navTitle}\r\n                        onPress= {() => navigation.goBack()}\r\n                        icon={\r\n                            <Icon\r\n                                name=\"navigate-before\"\r\n                                size={25}\r\n                                color=\"white\"\r\n                            />\r\n                        }\r\n                        iconLeft\r\n                        title=\"Back\"\r\n                    />\r\n            </View>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Buttons;\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n    ButtonContainer: {\r\n        flexDirection: 'row',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center',\r\n    },\r\n    navButton: {\r\n        backgroundColor: \"#FF6767\",\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginLeft: 55,\r\n        marginRight: 55,\r\n        borderRadius: 60,\r\n        width: 100,\r\n        height: 45,\r\n    },\r\n\r\n    navTitle: {\r\n        fontFamily: \"Inter_400Regular\",\r\n    },\r\n    navRow: {\r\n        marginTop: 30,\r\n        flexDirection: 'row'\r\n    }\r\n})"]},"metadata":{},"sourceType":"module"}