{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\Coding Applications\\\\Projects\\\\Board\\\\app\\\\components\\\\Buttons.js\";\n\nimport React, { useCallback, useState, useRef } from 'react';\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\n\nvar Buttons = function Buttons(_ref) {\n  var options = _ref.options,\n      setActiveRef = _ref.setActiveRef;\n  var buttonOptions = options;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      activeOption = _useState2[0],\n      setActiveOption = _useState2[1];\n\n  var updateActiveOption = function updateActiveOption(event) {\n    setActiveOption(event.target.value);\n    setActiveRef(event.target.value);\n    console.log(event.target.text);\n  };\n\n  return React.createElement(View, {\n    style: styles.ButtonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, buttonOptions.map(function (option, index) {\n    return React.createElement(TouchableHighlight, {\n      ref: setActiveRef,\n      key: index,\n      onPress: function onPress(event) {\n        return updateActiveOption(event);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: {\n        width: 75,\n        height: 80,\n        paddingTop: 20,\n        marginRight: 20,\n        marginLeft: 20,\n        marginTop: 20,\n        borderWidth: 1,\n        textAlign: 'center',\n        alignContent: 'center',\n        borderColor: \"#FF6767\",\n        fontSize: 25,\n        backgroundColor: activeOption === option ? \"#FF6767\" : 'white',\n        color: activeOption === option ? 'black' : \"#FF6767\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }\n    }, option));\n  }));\n};\n\nvar styles = StyleSheet.create({\n  ButtonContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center'\n  }\n});\nexport default Buttons;","map":{"version":3,"sources":["E:/Coding Applications/Projects/Board/app/components/Buttons.js"],"names":["React","useCallback","useState","useRef","Buttons","options","setActiveRef","buttonOptions","activeOption","setActiveOption","updateActiveOption","event","target","value","console","log","text","styles","ButtonContainer","map","option","index","width","height","paddingTop","marginRight","marginLeft","marginTop","borderWidth","textAlign","alignContent","borderColor","fontSize","backgroundColor","color","StyleSheet","create","flexDirection","flexWrap","justifyContent"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,QAA5B,EAAsCC,MAAtC,QAAoD,OAApD;;;;;;;AAIA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAA6B;AAAA,MAA3BC,OAA2B,QAA3BA,OAA2B;AAAA,MAAlBC,YAAkB,QAAlBA,YAAkB;AACzC,MAAMC,aAAa,GAAGF,OAAtB;;AADyC,kBAEDH,QAAQ,EAFP;AAAA;AAAA,MAElCM,YAFkC;AAAA,MAEpBC,eAFoB;;AAIzC,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAW;AAClCF,IAAAA,eAAe,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACAP,IAAAA,YAAY,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACC,MAAN,CAAaI,IAAzB;AACH,GAJD;;AAMA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKX,aAAa,CAACY,GAAd,CAAkB,UAACC,MAAD,EAASC,KAAT,EAAmB;AAClC,WACI,oBAAC,kBAAD;AACA,MAAA,GAAG,EAAEf,YADL;AAEA,MAAA,GAAG,EAAEe,KAFL;AAGA,MAAA,OAAO,EAAE,iBAACV,KAAD;AAAA,eAAWD,kBAAkB,CAACC,KAAD,CAA7B;AAAA,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII,oBAAC,IAAD;AACA,MAAA,KAAK,EAAE;AACHW,QAAAA,KAAK,EAAE,EADJ;AAEHC,QAAAA,MAAM,EAAE,EAFL;AAGHC,QAAAA,UAAU,EAAE,EAHT;AAIHC,QAAAA,WAAW,EAAE,EAJV;AAKHC,QAAAA,UAAU,EAAE,EALT;AAMHC,QAAAA,SAAS,EAAE,EANR;AAOHC,QAAAA,WAAW,EAAE,CAPV;AAQHC,QAAAA,SAAS,EAAE,QARR;AASHC,QAAAA,YAAY,EAAE,QATX;AAUHC,QAAAA,WAAW,EAAE,SAVV;AAWHC,QAAAA,QAAQ,EAAE,EAXP;AAYHC,QAAAA,eAAe,EAAEzB,YAAY,KAAKY,MAAjB,GAA0B,SAA1B,GAAsC,OAZpD;AAaHc,QAAAA,KAAK,EAAE1B,YAAY,KAAKY,MAAjB,GAA0B,OAA1B,GAAoC;AAbxC,OADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAiBKA,MAjBL,CAJJ,CADJ;AA0BH,GA3BA,CADL,CADJ;AAgCH,CA1CD;;AA2CA,IAAMH,MAAM,GAAGkB,UAAU,CAACC,MAAX,CAAkB;AAC7BlB,EAAAA,eAAe,EAAE;AACdmB,IAAAA,aAAa,EAAE,KADD;AAEdC,IAAAA,QAAQ,EAAE,MAFI;AAGdC,IAAAA,cAAc,EAAE;AAHF;AADY,CAAlB,CAAf;AAOA,eAAenC,OAAf","sourcesContent":["import React, {useCallback, useState, useRef } from 'react';\r\nimport { TouchableHighlight } from 'react-native';\r\nimport { TouchableOpacity, StyleSheet, Text, View } from 'react-native';\r\n\r\nconst Buttons = ({options, setActiveRef}) => {\r\n    const buttonOptions = options;\r\n    const [activeOption, setActiveOption] = useState()\r\n    \r\n    const updateActiveOption = (event) => {\r\n        setActiveOption(event.target.value)\r\n        setActiveRef(event.target.value)\r\n        console.log(event.target.text)\r\n    }\r\n\r\n    return (\r\n        <View style={styles.ButtonContainer}>\r\n            {buttonOptions.map((option, index) => {\r\n                return (\r\n                    <TouchableHighlight\r\n                    ref={setActiveRef}\r\n                    key={index}\r\n                    onPress={(event) => updateActiveOption(event)} >\r\n                        <Text\r\n                        style={{\r\n                            width: 75,\r\n                            height: 80,\r\n                            paddingTop: 20,\r\n                            marginRight: 20,\r\n                            marginLeft: 20,\r\n                            marginTop: 20,\r\n                            borderWidth: 1,\r\n                            textAlign: 'center',\r\n                            alignContent: 'center',\r\n                            borderColor: \"#FF6767\",\r\n                            fontSize: 25,\r\n                            backgroundColor: activeOption === option ? \"#FF6767\" : 'white',\r\n                            color: activeOption === option ? 'black' : \"#FF6767\",\r\n                            \r\n                        }}>\r\n                            {option}\r\n                        </Text>\r\n                    </TouchableHighlight>\r\n                )\r\n            })}\r\n        </View>\r\n    )\r\n}\r\nconst styles = StyleSheet.create({\r\n    ButtonContainer: {\r\n       flexDirection: 'row',\r\n       flexWrap: 'wrap',\r\n       justifyContent: 'center',\r\n    },\r\n})\r\nexport default Buttons;"]},"metadata":{},"sourceType":"module"}